spring:
  application:
    name: payment-service
  kafka:
    bootstrap-servers: ${SO_KAFKA_BROKERS:localhost:9094}
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true
  sql:
    init:
      mode: always
      schema-locations: classpath:db/schema.sql
  datasource:
    url: "jdbc:h2:file:${SO_DB_DIR:./data}/payment;AUTO_SERVER=TRUE;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE;"
    username: sa
    password: ""
  cloud:
    stream:
      bindings:
        orderCreated-in-0:
          destination: order.created
          group: payment-svc
          contentType: application/json
          consumer:
            maxAttempts: 3
        paymentSucceeded-out-0:
          destination: payment.succeeded
          contentType: application/json
        paymentFailed-out-0:
          destination: payment.failed
          contentType: application/json
      kafka:
        binder:
          brokers: ${SO_KAFKA_BROKERS:localhost:9092}
        bindings:
          orderCreated-in-0:
            consumer:
              enableDlq: true
              autoCommitOffset: false
              backoffInitialInterval: 1000
              backoffMaxInterval: 5000
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SO_KEYCLOAK_ISSUER:http://localhost:8585/realms/smartorder}

server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: ${SO_EUREKA_URI:http://localhost:8761/eureka}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    org.springframework.cloud.stream: INFO

